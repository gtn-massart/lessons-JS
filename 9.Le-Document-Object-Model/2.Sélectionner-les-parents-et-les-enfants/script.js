/*  
    Les √©l√©ment imbriqu√©s de notre page HTML deviennent des objets imbriqu√©s du DOM apr√®s analyse d'un navigateur.

    <div>
        <p>Hello</p>
    </div>
    
    =>

    {
        tag: "div",
        content: "",
        children: [
            {
                tag: "p",
                content: "Hello"
            },
            ...
        ]
    }
    // üîº Ceci est une image pour vous aider √† comprendre, √ßa ne repr√©sente pas les propri√©t√©s exactes utilis√©es.

    D√©couvrons les propri√©t√©s pratiques li√©es aux relations parents / enfants.
*/

const card = document.querySelector(".card");

// console.log(card);
// console.log(card.childNodes);
// console.log(card.children);  // pr√©f√©rable pour travailler
// console.log(card.children[1]);  // s√©lectionne le paragraphe
// console.log(card.firstChild); // retourne le premier noeud
// console.log(card.firstElementChild); // retourne le premier √©l√©ment html
// console.log(card.lastChild);  // retourne le dernier noeud
// console.log(card.lastElementChild);  // retourne le dernier √©l√©ment html


const title = document.querySelector("h2");

// console.log(title);
// console.log(title.nextSibling); // retourne le noeud suivant au m√™me niveau
// console.log(title.nextElementSibling); // retourne l'√©lement suivant
// console.log(title.previousSibling); // retourne le noeud pr√©cedent au m√™me niveau
// console.log(title.previousElementSibling);  // retourne l'√©l√©ment pr√©c√©dent  

// console.log(title.parentNode);  // retourne le noeud parent
// console.log(title.parentElement);   // reoturne l'√©l√©ment parent
// console.log(title.nodeName);    // retourne le nom du noeud
